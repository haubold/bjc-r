title: Daten in Listen sammeln
{
h2: Große Ideen
// big-idea: Understand the meaning of Turing Completeness.
// big-idea: Understand the concept of recursion.
Große Idee: Untersuche Eingriffe in die Privatsphäre durch die unkontrollierte
Verbreitung digitaler Information
//	video: Programming Paradigms (Dan Garcia) [https://coursesharing.org/courses/6/lectures/13]
	video: Rekursion 1 [https://coursesharing.org/courses/6/lectures/17]
	video: Soziale Implikationen 1 [http://youtu.be/v_tOSw-vhug]
	reading: Blown to Bits, Chapter 3 [http://www.bitsbook.com/wp-content/uploads/2008/12/chapter3.pdf]

h2: Aktivitäten
learning-goal: Übe Funktionen zu schreiben und zu lesen, die
verschiedene Eingabetypen haben.
learning-goal: Bestimme, wie Du Probleme in einzelne Funktionen
zerlegen kannst.
learning-goal: Sammle Erfahrungen im Umgang mit neuen Datenstrukturen
und den großen Vorrat an Blöcken, welche auf diese Datenstruktur
angewandt werden können.
learning-goal: Entwickle die Techniken und Funktionen um ein
Brettspiel zu zeichnen.

heading: Einführung in Listen
	 resource: den LIST Block verwenden, um eine Listen zu machen [/bjc-r/cur/programming/lists/hof/using-the-LIST-block-to-make-a-list.html]
	 resource: Wozu Listen? [/bjc-r/cur/programming/lists/hof/what-good-are-lists.html]
	 resource: Jedes Element einer Liste transformieren [/bjc-r/cur/programming/lists/hof/transforming-each-item-of-a-list.html]
	 resource: Elemente einer Liste auswählen [/bjc-r/cur/programming/lists/hof/choosing-some-items-from-a-list.html]
	 resource: Alle Elemente einer Liste zusammenfassen [/bjc-r/cur/programming/lists/hof/combining-all-the-items-of-a-list.html]
	 resource: Funktionen höherer Ordnung konstruieren, um
	 komplizierte Aufgaben zu lösen [/bjc-r/cur/programming/lists/hof/composing-higher-order-functions-to-solve-more-complicated-problems.html]
	 resource: Mehr zur Konstruktion von Funktionen höherer Ordnung [/bjc-r/cur/programming/lists/hof/more-on-composition-of-higher-order-functions.html]
	 resource: Wann Du wirklich eine Schleife brauchst [/bjc-r/cur/programming/lists/hof/when-you-really-have-to-loop.html]
	
//heading: Lists and Sentences: The Index Variable Pattern
//	resource: Processing a Sentence [/bjc-r/cur/programming/lists/sentences/processing-a-sentence.html]
	
heading: Listen verändern
	resource: Zwei Elemente einer Liste tauschen [/bjc-r/cur/programming/lists/intro/swap-two-list-values.html]
	resource: Variablen ändern [/bjc-r/cur/programming/lists/mutation/mutate-vars.html]

	
assignment: (für später) Hangman Classic [/bjc-r/cur/programming/projects/hangman/hangman-classic.html]
	
}
