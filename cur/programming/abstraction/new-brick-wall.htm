<!DOCTYPE html>
<html>
		<!-- put the following in exactly --><script type="text/javascript" src="/bjc-r/llab/loader.js"></script>
		
		<title>Ziegelwand</title>
	<body style="margin-top: 60px;"><div class="full"><div class="header">Brick Wall</div>

		<p>
                  Manchmal scheint es beim Programmieren, als ob wir
                  gegen eine Wand laufen. (Das ist ein gutes Zeichen;
                  wenn ein Projekt nicht schwierig ist, forderst Du
                  Dich nicht genug!) Jetzt werden wir diese Wand malen:

		</p>
		<p>
			<span style="margin-left: 40px;"><img border="0" title="Sample image of brick wall" alt="Sample image of brick wall" src="/bjc-r/img/abstraction/new-brickwall/wall.png"></span>
		</p>
		<h2>Abstraktion</h2>
		<p>Obwohl <span class="snap">snap</span>  viele
		Bl&ouml;cke f&uuml;r Malen und Bewegen hast, gibt es
		nichts zu Ziegeln. Es w&uuml;rde keinen Sinn machen,
		von vorne herein einen Ziegel bereitzustellen, da die
		meisten Programme keinen brauchen. Aber diejenigen
		welche, br&auml;chten wirklich
		einen <img src="/bjc-r/img/abstraction/new-brickwall/draw-brick.png"
		alt="draw-brick">
		Block. <img src="/bjc-r/img/abstraction/new-brickwall/draw-brick.png"
		\="" }="" alt="draw-brick"> bringt uns weg von den
		Kategorien des Computers und n&auml;her ran an die
		Kategorien des Problems, das wir zu l&ouml;sen
		versuchen. Die &Uuml;bersetzung von einer
		Programmiersprache in eine nat&uuml;rliche Srache
		(eine in der Menschen kommunizieren) ist
		unerl&auml;sslich f&uuml;r gute
		Abstraktion.
	       </p>
		<p>In diesem Problem baust Du eine Abstraktion, um
		eine Ziegelwand zu malen, indem Du
		zuerst <img src="/bjc-r/img/abstraction/new-brickwall/draw-brick.png"
		alt="draw-brick"> erzeugst, dann Bl&ouml;cke um
		Zeilen zu malen, und schlie&szlig;lich das Ziel: <img src="/bjc-r/img/abstraction/new-brickwall/draw-brick-wall-num.png" alt="draw-brick-wall-n">.
		</p>
		<p>
			&nbsp;
		</p>

<h2>Einen Ziegel malen</h2>

<p>Ein Ziegel ist ein rotes Rechteck ("Ziegelrot", d. h. kein
  Prim&auml;rfarben-Rot, sondern etwas dunkler). Es gibt keinen "Mal
  Rechteck" Block in <span class="snap">snap</span> , aber wir
  k&ouml;nnen so tun als ob, indem wir uns ein Rechteck als sehr dicke
  Linie vorstellen. Du wei&szlig;t, wie man mit dem <b>move</b> Block
  eine Linie malt. In der <b>Pen</b> Palette gibt es einen <b>set pen
  size</b> Block. Wir k&ouml;nnen ihn verwenden, um eine dicke Linie
  zu malen:</p>

<span style="margin-left: 40px;"><img border="0" title="code for brick" alt="Code for draw brick" src="/bjc-r/img/abstraction/new-brickwall/draw-brick-code.png"></span>

<p>Wenn Du diesen Block ausprobierst, wirst Du merken, dass Dein
  Ziegel abgerundete Ecken hat. Diese Enden ragen &uuml;ber das Ende
  der Linie raus, die Du malen wolltest. Hier ist ein Bild eines
  abgerundeten Ziegels mit einer normalen Linie (Pen Size 1) drin:</p>

<span style="margin-left: 40px;"><img border="0" title="round brick" alt="Round brick" src="/bjc-r/img/abstraction/new-brickwall/round-brick.png"></span>

<p>Diese abgerundeten Enden sind meistens sehr h&uuml;bsch, aber sie
  sehen nicht wie Ziegelsteine aus, und sie verkomplizieren das
  Nachdenken &uuml;ber L&auml;ngen in diesem Projekt. F&uuml;r dieses
  Projekt schalten wir daher die abgerundeten Enden ab. Klicke auf
  den <em>settings</em> Knopf
(<img src="/bjc-r/img/abstraction/new-brickwall/settings.png"
  alt="settings button">) im Toolbar, und schalte die Option "<b>Flat line
ends</b>" an.

		</p><h2>Problemzerlegung verwenden, um eine
		Abstraktion zu schreiben</h2>
		<p>Betrachte diese Code-Zeile, die verwendet wurde,
		die Zielgelwand zu bauen:
		</p>
		<p><img src="/bjc-r/img/abstraction/new-brickwall/draw-brick-wall-7.png" alt="draw-brick-wall-7">
		</p>
		<p>
Wenn Du einen Maurer bittest, eine Ziegelwand mit sieben Zeilen zu
machen, versteht er Dich sicher und f&uuml;hrt sie auf. Ein Computer
versteht allerdings nicht, was das bedeutet, und Du musst mehr Details
liefern. Das bedeutet, vom Abstrakten (mal eine Ziegelwand) zum
Konkreten zu gehen. Daf&uuml;r braucht man Problemzerlegung.
		</p>
		<p>
                  Eine kleine &Uuml;berlegung zeigt, dass es zwei
			Arten von Ziegelzeilen gibt:
		</p>
		<ul>
			<li>
				<strong>Zeile A</strong>: <img border="0" title="Row A" alt="Row A" src="/bjc-r/img/abstraction/new-brickwall/row-a.png">
			</li>
			<li>
				<strong>Zeile B</strong>: <img border="0" title="Row B" alt="Row B" src="/bjc-r/img/abstraction/new-brickwall/row-b.png">
			</li>
		</ul>

<p>Mache
  Bl&ouml;cke <img src="/bjc-r/img/abstraction/new-brickwall/rowa-block.png"
                   alt="Row A">
  und <img src="/bjc-r/img/abstraction/new-brickwall/rowb-block.png"
           alt="Row B">.  &Uuml;berlege, welche Hilfs-Bl&ouml;cke
  au&szlig;er <img src="/bjc-r/img/abstraction/new-brickwall/draw-brick.png"
  alt="Draw Brick"> Du vielleicht brauchst.</p>

<p>Es ist m&ouml;glich

It's possible to go overboard on abstraction, so that you have a gazillion
blocks and it's hard to find where the work actually gets done.  But, on the
other hand, sometimes it's useful to make a custom block even if its
definition is just one primitive block.  For example, to draw the
<i>mortar</i> (the white space) between blocks in a row, all you have to do
(since the <img src="/bjc-r/img/abstraction/new-brickwall/draw-brick.png" alt="Draw Brick"> block picks up the pen at the end of its script) is move
forward:</p>

<img src="/bjc-r/img/abstraction/new-brickwall/move4.png" alt="Move 4 Steps">

<p>You could just use that <b>move</b> block inside your <b>Row A</b> block.
But you might instead want to define a <b>Draw Mortar</b> block.  Why?
Maybe later you'll decide that four steps is the wrong thickness for mortar,
and you'd rather have five steps.  If there are a dozen <b>Move</b> blocks
scattered through your program to draw mortar, you might not find them all.
With a <b>Draw Mortar</b> block, you can just change its definition, and
all the mortar in your picture will be changed.

</p><p>Notice that the two kinds of rows should be exactly the same length.  Your
first try at drawing a Row B will probably be a little too long.  Why?  Row A
has six whole bricks.  Row B has five whole bricks plus two half-bricks, which
adds up to six whole bricks.  To understand the bug, think about the amount of
<i>mortar</i> in each kind of row.</p>

<p>How are you going to fix it?  Should a Row B have different-size
bricks, different-size mortar gaps, or different-size half-bricks?
If you're not sure, try all the possibilities and see which looks right
in the finished wall.  (There's really only one good answer.)</p>

<p>Once you have the two kinds of rows the same length, you can write
the
<img src="/bjc-r/img/abstraction/new-brickwall/draw-brick-wall-num.png" alt="Draw a Brick Wall with ( ) Rows">
block.  Remember that it should work for both even and odd numbers of
rows, which means that sometimes you'll have to draw an extra Row A.</p>

<p>(How do you know if a number is odd?  You'll find the
<img src="/bjc-r/img/abstraction/new-brickwall/mod.png" alt="Mod">
block helpful.)</p>

<h2>Additional Exercises</h2>

<p>After you've drawn the picture at the top of this page, add more
inputs to the <b>Draw a Brick Wall</b> block:</p>

<ul><li>Length of the wall (how many bricks)</li>
<li>Length of a brick</li>
<li>Mortar thickness</li></ul>

<p>Add these one at a time, not all at once!  When you modify the
length of a brick, that should also change the length of a half-brick.
When you modify the mortar thickness, that should also change the
distance between rows (since that's mortar too).</p>

	

</div></body></html>
